diff --git a/asterisk/apps/app_audiosocket.c b/asterisk/apps/app_audiosocket.c
index afed074..6eaf051 100644
--- a/asterisk/apps/app_audiosocket.c
+++ b/asterisk/apps/app_audiosocket.c
@@ -203,5 +203,4 @@ AST_MODULE_INFO(
     .load =    load_module,
     .unload = unload_module,
     .load_pri =        AST_MODPRI_CHANNEL_DRIVER,
-    .requires = "res_audiosocket",
 );
diff --git a/asterisk/channels/chan_audiosocket.c b/asterisk/channels/chan_audiosocket.c
index bb11888..0928e01 100644
--- a/asterisk/channels/chan_audiosocket.c
+++ b/asterisk/channels/chan_audiosocket.c
@@ -49,6 +49,10 @@ struct audiosocket_instance {
 } audiosocket_instance;

 /* Forward declarations */
+static int ast_sockaddr_resolve_first_af(struct ast_sockaddr *addr,
+                                      const char *name, int flag, int family);
+
+
 static struct ast_channel *audiosocket_request(const char *type,
                                                                                           struct ast_format_cap *cap,
                                                                                           const struct ast_assigned_ids *assignedids,
@@ -232,6 +236,31 @@ static struct ast_channel *audiosocket_request(const char *type,
        return NULL;
 }

+
+/*! \brief  Return the first entry from ast_sockaddr_resolve filtered by address family
+ *
+ * \warning Using this function probably means you have a faulty design.
+ */
+static int ast_sockaddr_resolve_first_af(struct ast_sockaddr *addr,
+                                      const char* name, int flag, int family)
+{
+        struct ast_sockaddr *addrs;
+        int addrs_cnt;
+
+        addrs_cnt = ast_sockaddr_resolve(&addrs, name, flag, family);
+        if (addrs_cnt <= 0) {
+                return 1;
+        }
+        if (addrs_cnt > 1) {
+                ast_debug(1, "Multiple addresses, using the first one only\n");
+        }
+
+        ast_sockaddr_copy(addr, &addrs[0]);
+
+        ast_free(addrs);
+        return 0;
+}
+
 /*! \brief Function called when our module is unloaded */
 static int unload_module(void)
 {
@@ -267,5 +296,4 @@ AST_MODULE_INFO(ASTERISK_GPL_KEY, AST_MODFLAG_LOAD_ORDER,
     .load = load_module,
     .unload = unload_module,
     .load_pri = AST_MODPRI_CHANNEL_DRIVER,
-    .requires = "res_audiosocket",
 );
